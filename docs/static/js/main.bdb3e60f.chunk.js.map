{"version":3,"sources":["components/toDoReducer.js","components/ToDoListItem.js","components/ToDoList.js","components/FormAdd.js","components/useForm.js","components/TaskApp.js","reportWebVitals.js","index.js"],"names":["toDoReducer","state","action","type","payload","filter","toDo","id","map","done","ToDoListItem","index","deleteToDo","doneToDo","className","onClick","task","ToDoList","i","FormAdd","addToDo","initialState","useState","value","setValue","target","useForm","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","Date","getTime","name","placeholder","onChange","autocomplete","init","JSON","parse","localStorage","getItem","TaskApp","useReducer","dispatch","useEffect","setItem","stringify","newToDo","toDoId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdb3e60f.chunk.js","sourcesContent":["export const toDoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n    case 'delete':\r\n      return state.filter((toDo) => toDo.id !== action.payload);\r\n    case 'done':\r\n      return state.map((toDo) => {\r\n        if (toDo.id === action.payload) {\r\n          return {...toDo, done: !toDo.done};\r\n        } else {\r\n          return toDo;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nconst ToDoListItem = ({toDo, index, deleteToDo, doneToDo}) => {\r\n  return (\r\n    <li className=\"TaskApp-list-item\">\r\n      <p className={`TaskApp-list-item-task ${toDo.done && 'complete'}`} onClick={() => doneToDo(toDo.id)}>\r\n        {index + 1}. {toDo.task}\r\n      </p>\r\n      <button className=\"TaskApp-list-item-button\" onClick={() => deleteToDo(toDo.id)}>\r\n        Borrar\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ToDoListItem;\r\n","import React from 'react';\r\nimport ToDoListItem from './ToDoListItem';\r\n\r\nconst ToDoList = ({state, deleteToDo, doneToDo}) => {\r\n  return (\r\n    <ul className=\"TaskApp-list\">\r\n      {state.map((toDo, i) => (\r\n        <ToDoListItem key={toDo.id} toDo={toDo} index={i} deleteToDo={deleteToDo} doneToDo={doneToDo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport {useForm} from './useForm';\r\n\r\nconst FormAdd = ({addToDo}) => {\r\n  const [value, handleInputChange, reset] = useForm('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value.trim().length <= 1) {\r\n      return;\r\n    }\r\n    addToDo({\r\n      id: new Date().getTime(),\r\n      task: value,\r\n      done: false,\r\n    });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"TaskApp-Form\">\r\n      <input type=\"text\" name=\"description\" placeholder=\"Aprender...\" value={value} onChange={handleInputChange} autocomplete=\"off\" />\r\n      <button type=\"submit\" className=\"btn\">\r\n        +\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormAdd;\r\n","import {useState} from 'react';\r\n\r\nexport const useForm = (initialState) => {\r\n  const [value, setValue] = useState(initialState);\r\n  const reset = () => {\r\n    setValue(initialState);\r\n  };\r\n  const handleInputChange = ({target}) => {\r\n    setValue(target.value);\r\n  };\r\n\r\n  return [value, handleInputChange, reset];\r\n};\r\n","import {useEffect, useReducer} from 'react';\nimport {toDoReducer} from './toDoReducer';\nimport '../taskApp.scss';\nimport ToDoList from './ToDoList';\nimport FormAdd from './FormAdd';\n\nconst initialState = [];\nconst init = () => {\n  return JSON.parse(localStorage.getItem('toDos')) || [];\n};\n\nfunction TaskApp() {\n  const [state, dispatch] = useReducer(toDoReducer, initialState, init);\n  useEffect(() => {\n    return localStorage.setItem('toDos', JSON.stringify(state));\n  }, [state]);\n\n  const addToDo = (newToDo) => {\n    dispatch({\n      type: 'add',\n      payload: newToDo,\n    });\n  };\n  const deleteToDo = (toDoId) => {\n    dispatch({\n      type: 'delete',\n      payload: toDoId,\n    });\n  };\n  const doneToDo = (toDoId) => {\n    dispatch({\n      type: 'done',\n      payload: toDoId,\n    });\n  };\n\n  return (\n    <div className=\"TaskApp\">\n      <header className=\"TaskApp-header\">\n        <h1>Lista de Tareas ({state.length})</h1>\n      </header>\n      <main className=\"TaskApp-container\">\n        <FormAdd addToDo={addToDo} />\n        {state.length > 0 && <ToDoList state={state} deleteToDo={deleteToDo} doneToDo={doneToDo} />}\n      </main>\n    </div>\n  );\n}\n\nexport default TaskApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport TaskApp from './components/TaskApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TaskApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}